{"mappings":"ACCA,MAAM,EAAQ,IAAI,MAAM,KAAK,CACd,IAAI,MAAM,iBAAiB,CAAC,GAAI,OAAO,UAAU,CAAG,OAAO,WAAW,CAAE,GAAK,KAC5F,MAAM,EAAW,IAAI,MAAM,aAAa,CAAC,CAAE,UAAW,CAAA,CAAK,GAC3D,EAAS,OAAO,CAAC,OAAO,UAAU,CAAE,OAAO,WAAW,EACtD,SAAS,IAAI,CAAC,WAAW,CAAC,EAAS,UAAU,EAG7C,MAAM,EAAe,IAAI,MAAM,YAAY,CAAC,SAC5C,EAAM,GAAG,CAAC,GACV,MAAM,EAAmB,IAAI,MAAM,gBAAgB,CAAC,SAAU,IAC9D,EAAiB,QAAQ,CAAC,GAAG,CAAC,EAAG,EAAG,GACpC,EAAM,GAAG,CAAC,GAGV,MAAM,EAAW,IAAI,MAAM,cAAc,CAAC,GAAK,GAAI,IAC7C,EAAW,IAAI,MAAM,iBAAiB,CAAC,CAAE,MAAO,QAAS,GACzD,EAAS,IAAI,MAAM,IAAI,CAAC,EAAU,GACxC,EAAM,GAAG,CAAC,GAGV,MAAM,EAAgB,IAAI,MAAM,aAAa,CAAC,IAAK,KAC7C,EAAgB,IAAI,MAAM,iBAAiB,CAAC,CAAE,MAAO,MAAU,KAAM,MAAM,UAAU,AAAC,GACtF,EAAQ,IAAI,MAAM,IAAI,CAAC,EAAe,EAC5C,CAAA,EAAM,QAAQ,CAAC,CAAC,CAAG,CAAC,KAAK,EAAE,CAAG,EAC9B,EAAM,GAAG,CAAC,GAGV,MAAM,EAAa,IAAI,MAAM,UAAU,CAAC,IAAK,KAC7C,EAAM,GAAG,CAAC","sources":["<anon>","src/js/sceneSetup.js"],"sourcesContent":["// Setup scene, camera, renderer\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer({\n    antialias: true\n});\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n// Lighting\nconst ambientLight = new THREE.AmbientLight(0x404040);\nscene.add(ambientLight);\nconst directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\ndirectionalLight.position.set(1, 1, 1);\nscene.add(directionalLight);\n// Create a sphere\nconst geometry = new THREE.SphereGeometry(0.5, 32, 32);\nconst material = new THREE.MeshPhongMaterial({\n    color: 0xff0000\n});\nconst sphere = new THREE.Mesh(geometry, material);\nscene.add(sphere);\n// Ground plane\nconst planeGeometry = new THREE.PlaneGeometry(100, 100);\nconst planeMaterial = new THREE.MeshPhongMaterial({\n    color: 0x00ff00,\n    side: THREE.DoubleSide\n});\nconst plane = new THREE.Mesh(planeGeometry, planeMaterial);\nplane.rotation.x = -Math.PI / 2;\nscene.add(plane);\n// Grid helper\nconst gridHelper = new THREE.GridHelper(100, 100);\nscene.add(gridHelper);\n\n//# sourceMappingURL=index.7625ddfe.js.map\n","// Setup scene, camera, renderer\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\n// Lighting\nconst ambientLight = new THREE.AmbientLight(0x404040);\nscene.add(ambientLight);\nconst directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\ndirectionalLight.position.set(1, 1, 1);\nscene.add(directionalLight);\n\n// Create a sphere\nconst geometry = new THREE.SphereGeometry(0.5, 32, 32);\nconst material = new THREE.MeshPhongMaterial({ color: 0xff0000 });\nconst sphere = new THREE.Mesh(geometry, material);\nscene.add(sphere);\n\n// Ground plane\nconst planeGeometry = new THREE.PlaneGeometry(100, 100);\nconst planeMaterial = new THREE.MeshPhongMaterial({ color: 0x00ff00, side: THREE.DoubleSide });\nconst plane = new THREE.Mesh(planeGeometry, planeMaterial);\nplane.rotation.x = -Math.PI / 2;\nscene.add(plane);\n\n// Grid helper\nconst gridHelper = new THREE.GridHelper(100, 100);\nscene.add(gridHelper);"],"names":["scene","THREE","Scene","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","document","body","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","position","set","geometry","SphereGeometry","material","MeshPhongMaterial","color","sphere","Mesh","planeGeometry","PlaneGeometry","planeMaterial","side","DoubleSide","plane","rotation","x","Math","PI","gridHelper","GridHelper"],"version":3,"file":"index.7625ddfe.js.map"}